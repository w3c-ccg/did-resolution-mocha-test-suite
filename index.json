{
  "matrices": [
    {
      "title": "Example Test Suite",
      "ctx": null,
      "suites": [
        {
          "title": "Danube Tech",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a197ed49-7e49-4f5d-bcd6-68aa5ea94f46",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 522,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15068,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8f36c4dc-22c9-4d80-bcbb-b62672b02b96",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15527,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:46658458-cb03-4d17-97ff-dcc619e2cae7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30531,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15003,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:961b7619-63c3-4953-aeb1-6658394d6de8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45535,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 322,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7b688c86-6d93-47e1-963f-5bc8e24cd145",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45857,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:05ea96c8-452f-49e9-b19c-06cd1f5a3260",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45920,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1620,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2e11d827-e2dc-453f-87eb-3fd2c952c437",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47541,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1434,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2737236c-9df3-4dc8-a8e4-602b32be0995",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 711,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0a47af8e-06ec-4019-8e93-360221bff282",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 190,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:btcr:x705-jznz-q3nl-srs",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b576f3f1-8bcc-4610-8a2c-bc8d44740907",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:x705-jznz-q3nl-srs"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49878,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 282,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:btcr:xkrn-xz7q-qsye-28p",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1a8d989a-7443-454d-bcee-c78071e473a3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:xkrn-xz7q-qsye-28p"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:btcr:xz35-jznz-q9yu-ply",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c8e6de4c-32c2-49d6-82c7-bd9de68e9e63",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:xz35-jznz-q9yu-ply"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d6ba45d4-3170-44c1-859a-70fbf58003c8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1350,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff7e0ef1-4106-40f6-8790-da6c48ebc1ba",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51629,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 330,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fe115b8f-0d1a-49da-8cce-a6f1c951b3c0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51960,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1655,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:62861d06-bef2-44fa-a5b3-dd84e9b7a551",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53615,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1031,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6d5df8f4-3f90-4e7d-ba43-c9672cc16b28",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:706d63cb-644e-406f-8dfe-fe16ff53e9a6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1628,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3946e4e8-9f69-443e-a602-6149e63bd673",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 255,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:71d89428-bd1b-4016-a994-d8b272eb06c8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71532,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:dns:danubetech.com",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a3ea73e0-92da-4dc7-80b2-8deaba9198cc",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dns:danubetech.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 281,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:94ba28b5-d5a5-4e37-a150-c8f22beef35a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b9dcfead-d67e-4dd5-9dc8-06deefc1075b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 86880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:587652b5-1891-4e6d-a102-47a4510b87dd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101883,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1067,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:358318bf-57b5-4bdf-9366-611d9b7ee063",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102949,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:53e441d3-e730-42ef-b50c-45450759f165",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103385,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 422,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:90076a90-011f-438d-ad4f-748f2e3e85ed",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103807,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:218d8c1e-9129-48b5-b12b-ce36a3ac8661",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104242,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 449,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f412c3e8-4f83-4cbc-8cd9-e3caa65e990e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 235,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8ce7686e-df73-47c3-a4b9-e9da24d07a9d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104928,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:emtrust:0x242a5ac36676462bd58a",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b79eb7bc-efbe-42d1-9e62-4eb68bd68435",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:emtrust:0x242a5ac36676462bd58a"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105038,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 278,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:ens:vitalik.eth",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ab2805d4-dce0-4f53-b33f-b3b6dc2a8583",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ens:vitalik.eth"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105316,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1992,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:53d7d658-dcb5-4373-bb42-9936aa4c47a8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 174,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:eosio:eos:eoscanadacom",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5b760cbd-563f-4a57-8da6-88e08a907ecd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:eosio:eos:eoscanadacom"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107481,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 248,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:24b67457-fe9a-4cfe-9234-5a027cffaa1b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107730,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f7e34c5-de4c-4c86-b853-fafc140e8aff",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107988,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 223,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:039259d6-31e5-44f9-b76a-09c1cb2eb757",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108210,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 205,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:131786ea-73bb-4356-a89e-a8efbf9d1ea7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108415,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 145,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3ff6e9a0-7376-485f-8e02-4d9a26860617",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 380,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c06cf480-a74e-420a-92ed-0d5f50b31bb4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108941,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 114,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff59de64-cd79-4407-8c2e-5f9122688af4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109055,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0e362865-41f8-4b51-a5fb-2f95ad040118",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 723,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8d68c0d0-cbf0-4a0f-b7fb-05311007e6f4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109848,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1963,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:67dca1f2-12ba-42bc-bd67-8ff59cefab97",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1774,
              "state": "failed",
              "err": {
                "actual": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
                "expected": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected 'did:everscale:47325e80e3cef5922d3a358…' to equal 'did:everscale:mainnet:47325e80e3cef59…'",
                "ok": false,
                "stack": "AssertionError: expected 'did:everscale:47325e80e3cef5922d3a358…' to equal 'did:everscale:mainnet:47325e80e3cef59…'\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:39:37)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:825272e9-7089-4dd1-a751-77d790b238d9",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5c5cf855-9bf5-465c-8015-6a22a1063212",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 128588,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 840,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3f9488c8-0188-42ca-9590-35855948cb60",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129428,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:af3fb081-7e49-4210-b447-a2f4ae5ed0a7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129520,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d389d0ef-4fc6-478b-8169-7d5a953a619c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129597,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 761,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:601cc5ce-bfef-4145-8043-5319a203dcca",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130358,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 336,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2eab9a64-003f-4cff-86d5-c32e22210427",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130693,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 333,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5425b0b6-3e5a-4d25-95cd-e89cafb2514d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131026,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 329,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:github:gjgd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8205c628-0bc6-47ca-97f6-22063489e235",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:github:gjgd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e1aaafa2-5715-4d72-a3a4-d27af2af9a7c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 146358,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7b943bcd-335f-453f-97d3-4813d24cd79d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 161360,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:56b8889c-6a0b-4c77-8d04-512643560bb3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 161565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 716,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ac349455-f701-4232-8628-f9fcd12e27b7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 162282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 14999,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0dd94ccd-377a-4e93-a62b-e8db6e80eda6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 177284,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:865d2ab5-3bbc-4bf9-8e40-16c17f2ad03d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 192286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d004e6c1-35a1-4553-9c2e-27e95ca1dead",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 207289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2786c470-eaf5-42df-9969-af47876e927e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 222291,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5d0bca0c-f9bc-4f55-99a0-c89eb4aa519b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 237293,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3336,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fae34005-39c2-438e-99a9-3c5c4dece71a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 240628,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2bb6a2b0-d07f-4e9e-99ec-649fd8d9d669",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 240695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1e340c19-118b-4efc-9044-098670242036",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 255697,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 496,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2d3a30cd-0b90-4e32-9510-dfc86ce8e713",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256193,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:dceeecf4-ef62-4c06-9dd1-9b0e26c25bc9",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256299,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 632,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:iscc:miagwptv4j2z57ci",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5fd5ccca-d5a9-4489-96d6-b6d5160655d8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iscc:miagwptv4j2z57ci"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:itn:EzfteTXcoHXh5W1PURHrS3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7cd00850-9c14-41e3-bdb0-61f19526af13",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:itn:EzfteTXcoHXh5W1PURHrS3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 510,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:itn:PA7xLNkMAqzzrDp4UBnrZm",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:80c820d7-e1c3-40d0-92ed-7236e97e492d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:itn:PA7xLNkMAqzzrDp4UBnrZm"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 257504,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 195,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1c37705d-4cd3-4479-b3d0-df430c93a9c0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 257699,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fd44f8d4-c648-48c4-872b-9bc4b6997603",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 272702,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 268,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f5fb4f61-02ca-4cfc-88a0-75342e49a5c5",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 272968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2b961d50-0188-494c-911b-0895384c4ee4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:cc999b2f-2115-4686-82e7-21b32906a68f",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1387a40f-acc7-4afb-a890-150d438dbee7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273192,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9d7a8453-4cc7-4c79-a5bc-ea50f0925668",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273261,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b9189aa8-b675-4d9c-a2bb-7626e06625bb",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273331,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:97f8eddb-9aee-4eef-9dcd-f7e37e1c6e1e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273401,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e34351d8-e5c3-476c-9c37-f39718e7284f",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273469,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:db5fe8aa-a7b2-4d95-bbdd-b5d5fbda22e8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:aca4a082-f602-4cf7-ac05-9d4b2126bcb3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273614,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6cc5150a-93d2-46f1-8a92-0d0d48c8aee2",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ebe05f8e-3163-441e-ab76-a1e982de952d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273751,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b534b2ca-a892-4ffc-8307-9ddc8674a39e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273820,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:799a0610-a51b-418e-a783-2ae953b674be",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:4926cc18-699d-4615-922a-0fb5462b1fc0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273955,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 510,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f8a5cbfa-64bf-4dae-a421-a1f217f8f011",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 274466,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 528,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:lit:AEZ87t1bi5bRxmVh3ksMUi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2a5a5987-5abc-400d-9653-12f04f421f38",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:lit:AEZ87t1bi5bRxmVh3ksMUi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 274994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5081,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d9a1dad2-0afe-4940-ba47-e89bf7595a77",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 590,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b913da24-8738-43f9-a491-1474039db82c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2548e4b6-65f4-4ecd-81ff-3f74248b2f93",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3566,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a47c8c22-dde7-4d08-b0fc-c04e7f539d86",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 284322,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9d9a0490-15f8-4d5a-a580-57a1c851356c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 287577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 513,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7db145a0-ff56-444e-acc9-b378e7586363",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 288091,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 655,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a5c220e6-871b-4c11-8798-cce0ed67b3f6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 288747,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9dd50fb6-729a-4cbb-8fd1-272555f442a2",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 303749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1192,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ef41643e-965e-48b5-a43a-cb25b55aa8ec",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 304941,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1011,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8c24eb12-1fb2-458d-b2cf-b3f8578e4963",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 305951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:04690f69-9e67-4793-a830-23a42484bf76",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b112b37e-a076-42e8-959d-a2d145fdab8d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:39db91f8-d6ef-4568-979a-47a819414a5e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306408,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:plc:44ybard66vv44zksje25o7dz",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c2e495fc-6d0e-414d-8ca8-533d394c0d97",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:plc:44ybard66vv44zksje25o7dz"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306477,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:plc:yk4dd2qkboz2yv6tpubpc6co",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1649a0c5-c3a6-4540-a32b-22f2006abdc5",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:plc:yk4dd2qkboz2yv6tpubpc6co"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306557,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:86e266fc-dd31-49dc-a373-2794e8171e18",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306630,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 451,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff4a1a01-eed2-4607-b42f-98cc230afbd7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:59493541-e0ef-4289-b394-1b14eac3778c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307494,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 410,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d8f69b77-9199-4cc6-8991-da53353882a8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:bcd095ed-a75c-4c0e-99bf-032c8e3c612d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 136,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f0b214a-69f1-4a61-9801-04be93f02bc8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308113,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 144,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:50bb1c79-a5b1-4cc5-92fb-1c2bff09cb26",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 690,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:sov:WRfXPg8dantKVubE3HX8pw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:4a43aba4-6bdb-4ad3-b459-34c6781ce964",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:WRfXPg8dantKVubE3HX8pw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 334,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fd8863df-cf96-41c5-bfd4-5bc42ba4841a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 309282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:cf45d0b8-4caa-4d76-b2f0-f98e9d13391a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 324285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15003,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a944a70e-65b7-45c3-89ea-45f784451008",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 339287,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f223860-d796-41f6-aefd-e0f98661c2fa",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 354289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7a49e986-5402-4c77-9aca-f4c13372e426",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 369292,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9c040789-022e-4700-8ebf-801e2ceda052",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 384294,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:28d5ecdd-143d-48ac-831b-e988e21a7c9a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 399296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 281,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0037ae48-f373-4f96-b988-a45e56d77d59",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 399577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:683eeece-e4a3-46f7-8343-c9a271c5b295",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 414579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 645,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f3260eda-2760-40f7-aff3-0f6c7c0140f4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415223,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 465,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c56dac09-d63c-4a28-a099-edb5c101dafd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 245,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b7c127fd-1ada-482f-a255-4035ed3fdc46",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 203,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5634af54-3860-4e80-849e-2f83f7b70503",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 416137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 200,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e5f5b8e3-6520-4b95-a7b2-9ff6bbbeafa7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 416337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            },
            {
              "type": "test",
              "title": "did:web:danubetech.com",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e2b6c759-b575-42f5-b6af-61588e704a91",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:web:danubetech.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 431340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 741,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:web:identity.foundation",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e22c04b5-9f72-4be9-b621-b79c89d4c3a1",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:web:identity.foundation"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432079,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 497,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e8c90b77-aee7-469d-9668-cec7f4f31e5b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432576,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 113,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a5a48f5b-dcd6-4886-a5ba-831cc7ea8303",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 285,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c8ad85cd-8b83-4a01-8320-44fcb1d363cf",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:36f60f11-c01c-4ada-870f-0a1f5424d829",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 433119,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [
            {
              "title": "\"before each\" hook: setupRow in \"Danube Tech\"",
              "body": "function setupRow() {\n  // append test meta data to the it/test this.\n  this.currentTest.cell = {\n    columnId: this.currentTest.parent.title,\n    rowId: this.currentTest.title\n  };\n}",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "originalTitle": "\"before each\" hook: setupRow",
              "_events": {},
              "_eventsCount": 1,
              "duration": 0,
              "_error": null
            }
          ],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "w9XvgSU4OQBRd0Q-yzvrQ",
          "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
          "_testId": "urn:uuid:2e6207ec-22cf-44ce-be59-7deeb6740a82"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "rrtlFBSnqLlb2Ivlgb3HK",
      "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementer",
      "_testId": "urn:uuid:4e4bb7e2-f04c-41f5-8209-013a35dbda7e",
      "columns": [
        "Danube Tech"
      ],
      "rows": [
        {
          "id": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8",
          "cells": [
            {
              "type": "test",
              "title": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a197ed49-7e49-4f5d-bcd6-68aa5ea94f46",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 522,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15068,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe",
          "cells": [
            {
              "type": "test",
              "title": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8f36c4dc-22c9-4d80-bcbb-b62672b02b96",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15527,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15",
          "cells": [
            {
              "type": "test",
              "title": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:46658458-cb03-4d17-97ff-dcc619e2cae7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30531,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15003,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
          "cells": [
            {
              "type": "test",
              "title": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:961b7619-63c3-4953-aeb1-6658394d6de8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45535,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 322,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
          "cells": [
            {
              "type": "test",
              "title": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7b688c86-6d93-47e1-963f-5bc8e24cd145",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45857,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044",
          "cells": [
            {
              "type": "test",
              "title": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:05ea96c8-452f-49e9-b19c-06cd1f5a3260",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45920,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1620,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf",
          "cells": [
            {
              "type": "test",
              "title": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2e11d827-e2dc-453f-87eb-3fd2c952c437",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47541,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1434,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt",
          "cells": [
            {
              "type": "test",
              "title": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2737236c-9df3-4dc8-a8e4-602b32be0995",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48975,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 711,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw",
          "cells": [
            {
              "type": "test",
              "title": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0a47af8e-06ec-4019-8e93-360221bff282",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49688,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 190,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:btcr:x705-jznz-q3nl-srs",
          "cells": [
            {
              "type": "test",
              "title": "did:btcr:x705-jznz-q3nl-srs",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b576f3f1-8bcc-4610-8a2c-bc8d44740907",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:x705-jznz-q3nl-srs"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49878,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 282,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:btcr:xkrn-xz7q-qsye-28p",
          "cells": [
            {
              "type": "test",
              "title": "did:btcr:xkrn-xz7q-qsye-28p",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1a8d989a-7443-454d-bcee-c78071e473a3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:xkrn-xz7q-qsye-28p"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 59,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:btcr:xz35-jznz-q9yu-ply",
          "cells": [
            {
              "type": "test",
              "title": "did:btcr:xz35-jznz-q9yu-ply",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c8e6de4c-32c2-49d6-82c7-bd9de68e9e63",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:btcr:xz35-jznz-q9yu-ply"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 58,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd",
          "cells": [
            {
              "type": "test",
              "title": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d6ba45d4-3170-44c1-859a-70fbf58003c8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1350,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw",
          "cells": [
            {
              "type": "test",
              "title": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff7e0ef1-4106-40f6-8790-da6c48ebc1ba",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51629,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 330,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN",
          "cells": [
            {
              "type": "test",
              "title": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fe115b8f-0d1a-49da-8cce-a6f1c951b3c0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51960,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1655,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47",
          "cells": [
            {
              "type": "test",
              "title": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:62861d06-bef2-44fa-a5b3-dd84e9b7a551",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53615,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1031,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3",
          "cells": [
            {
              "type": "test",
              "title": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6d5df8f4-3f90-4e7d-ba43-c9672cc16b28",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr",
          "cells": [
            {
              "type": "test",
              "title": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:706d63cb-644e-406f-8dfe-fe16ff53e9a6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 69649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1628,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3",
          "cells": [
            {
              "type": "test",
              "title": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3946e4e8-9f69-443e-a602-6149e63bd673",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 255,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo",
          "cells": [
            {
              "type": "test",
              "title": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:71d89428-bd1b-4016-a994-d8b272eb06c8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71532,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 63,
              "state": "failed",
              "err": {
                "message": "expected false to be true",
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:dns:danubetech.com",
          "cells": [
            {
              "type": "test",
              "title": "did:dns:danubetech.com",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a3ea73e0-92da-4dc7-80b2-8deaba9198cc",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dns:danubetech.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 281,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA",
          "cells": [
            {
              "type": "test",
              "title": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:94ba28b5-d5a5-4e37-a150-c8f22beef35a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 71876,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH",
          "cells": [
            {
              "type": "test",
              "title": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b9dcfead-d67e-4dd5-9dc8-06deefc1075b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 86880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp",
          "cells": [
            {
              "type": "test",
              "title": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:587652b5-1891-4e6d-a102-47a4510b87dd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101883,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1067,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi",
          "cells": [
            {
              "type": "test",
              "title": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:358318bf-57b5-4bdf-9366-611d9b7ee063",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102949,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu",
          "cells": [
            {
              "type": "test",
              "title": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:53e441d3-e730-42ef-b50c-45450759f165",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103385,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 422,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH",
          "cells": [
            {
              "type": "test",
              "title": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:90076a90-011f-438d-ad4f-748f2e3e85ed",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103807,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt",
          "cells": [
            {
              "type": "test",
              "title": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:218d8c1e-9129-48b5-b12b-ce36a3ac8661",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104242,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 449,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc",
          "cells": [
            {
              "type": "test",
              "title": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f412c3e8-4f83-4cbc-8cd9-e3caa65e990e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104692,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 235,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A",
          "cells": [
            {
              "type": "test",
              "title": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8ce7686e-df73-47c3-a4b9-e9da24d07a9d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 104928,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:emtrust:0x242a5ac36676462bd58a",
          "cells": [
            {
              "type": "test",
              "title": "did:emtrust:0x242a5ac36676462bd58a",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b79eb7bc-efbe-42d1-9e62-4eb68bd68435",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:emtrust:0x242a5ac36676462bd58a"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105038,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 278,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:ens:vitalik.eth",
          "cells": [
            {
              "type": "test",
              "title": "did:ens:vitalik.eth",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ab2805d4-dce0-4f53-b33f-b3b6dc2a8583",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ens:vitalik.eth"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105316,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1992,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks",
          "cells": [
            {
              "type": "test",
              "title": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:53d7d658-dcb5-4373-bb42-9936aa4c47a8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 174,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:eosio:eos:eoscanadacom",
          "cells": [
            {
              "type": "test",
              "title": "did:eosio:eos:eoscanadacom",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5b760cbd-563f-4a57-8da6-88e08a907ecd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:eosio:eos:eoscanadacom"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107481,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 248,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "type": "test",
              "title": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:24b67457-fe9a-4cfe-9234-5a027cffaa1b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107730,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 258,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "type": "test",
              "title": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f7e34c5-de4c-4c86-b853-fafc140e8aff",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107988,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 223,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
          "cells": [
            {
              "type": "test",
              "title": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:039259d6-31e5-44f9-b76a-09c1cb2eb757",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108210,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 205,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
          "cells": [
            {
              "type": "test",
              "title": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:131786ea-73bb-4356-a89e-a8efbf9d1ea7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108415,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 145,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "type": "test",
              "title": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3ff6e9a0-7376-485f-8e02-4d9a26860617",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 380,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW",
          "cells": [
            {
              "type": "test",
              "title": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c06cf480-a74e-420a-92ed-0d5f50b31bb4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108941,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 114,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9",
          "cells": [
            {
              "type": "test",
              "title": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff59de64-cd79-4407-8c2e-5f9122688af4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109055,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4",
          "cells": [
            {
              "type": "test",
              "title": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0e362865-41f8-4b51-a5fb-2f95ad040118",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 723,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
          "cells": [
            {
              "type": "test",
              "title": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8d68c0d0-cbf0-4a0f-b7fb-05311007e6f4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109848,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1963,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
          "cells": [
            {
              "type": "test",
              "title": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:67dca1f2-12ba-42bc-bd67-8ff59cefab97",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1774,
              "state": "failed",
              "err": {
                "actual": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
                "expected": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected 'did:everscale:47325e80e3cef5922d3a358…' to equal 'did:everscale:mainnet:47325e80e3cef59…'",
                "ok": false,
                "stack": "AssertionError: expected 'did:everscale:47325e80e3cef5922d3a358…' to equal 'did:everscale:mainnet:47325e80e3cef59…'\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:39:37)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d",
          "cells": [
            {
              "type": "test",
              "title": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:825272e9-7089-4dd1-a751-77d790b238d9",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74",
          "cells": [
            {
              "type": "test",
              "title": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5c5cf855-9bf5-465c-8015-6a22a1063212",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 128588,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 840,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764",
          "cells": [
            {
              "type": "test",
              "title": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:3f9488c8-0188-42ca-9590-35855948cb60",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129428,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08",
          "cells": [
            {
              "type": "test",
              "title": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:af3fb081-7e49-4210-b447-a2f4ae5ed0a7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129520,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS",
          "cells": [
            {
              "type": "test",
              "title": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d389d0ef-4fc6-478b-8169-7d5a953a619c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129597,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 761,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7",
          "cells": [
            {
              "type": "test",
              "title": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:601cc5ce-bfef-4145-8043-5319a203dcca",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130358,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 336,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4",
          "cells": [
            {
              "type": "test",
              "title": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2eab9a64-003f-4cff-86d5-c32e22210427",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130693,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 333,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH",
          "cells": [
            {
              "type": "test",
              "title": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5425b0b6-3e5a-4d25-95cd-e89cafb2514d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131026,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 329,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:github:gjgd",
          "cells": [
            {
              "type": "test",
              "title": "did:github:gjgd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8205c628-0bc6-47ca-97f6-22063489e235",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:github:gjgd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de",
          "cells": [
            {
              "type": "test",
              "title": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e1aaafa2-5715-4d72-a3a4-d27af2af9a7c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 146358,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3",
          "cells": [
            {
              "type": "test",
              "title": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7b943bcd-335f-453f-97d3-4813d24cd79d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 161360,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 206,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw",
          "cells": [
            {
              "type": "test",
              "title": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:56b8889c-6a0b-4c77-8d04-512643560bb3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 161565,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 716,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa",
          "cells": [
            {
              "type": "test",
              "title": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ac349455-f701-4232-8628-f9fcd12e27b7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 162282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 14999,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0dd94ccd-377a-4e93-a62b-e8db6e80eda6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 177284,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:865d2ab5-3bbc-4bf9-8e40-16c17f2ad03d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 192286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d004e6c1-35a1-4553-9c2e-27e95ca1dead",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 207289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2786c470-eaf5-42df-9969-af47876e927e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 222291,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5d0bca0c-f9bc-4f55-99a0-c89eb4aa519b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 237293,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3336,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fae34005-39c2-438e-99a9-3c5c4dece71a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 240628,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 66,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB",
          "cells": [
            {
              "type": "test",
              "title": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2bb6a2b0-d07f-4e9e-99ec-649fd8d9d669",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 240695,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A",
          "cells": [
            {
              "type": "test",
              "title": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1e340c19-118b-4efc-9044-098670242036",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 255697,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 496,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w",
          "cells": [
            {
              "type": "test",
              "title": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2d3a30cd-0b90-4e32-9510-dfc86ce8e713",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256193,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a",
          "cells": [
            {
              "type": "test",
              "title": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:dceeecf4-ef62-4c06-9dd1-9b0e26c25bc9",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256299,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 632,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:iscc:miagwptv4j2z57ci",
          "cells": [
            {
              "type": "test",
              "title": "did:iscc:miagwptv4j2z57ci",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5fd5ccca-d5a9-4489-96d6-b6d5160655d8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:iscc:miagwptv4j2z57ci"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 62,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:itn:EzfteTXcoHXh5W1PURHrS3",
          "cells": [
            {
              "type": "test",
              "title": "did:itn:EzfteTXcoHXh5W1PURHrS3",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7cd00850-9c14-41e3-bdb0-61f19526af13",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:itn:EzfteTXcoHXh5W1PURHrS3"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 256994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 510,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:itn:PA7xLNkMAqzzrDp4UBnrZm",
          "cells": [
            {
              "type": "test",
              "title": "did:itn:PA7xLNkMAqzzrDp4UBnrZm",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:80c820d7-e1c3-40d0-92ed-7236e97e492d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:itn:PA7xLNkMAqzzrDp4UBnrZm"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 257504,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 195,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21",
          "cells": [
            {
              "type": "test",
              "title": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1c37705d-4cd3-4479-b3d0-df430c93a9c0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 257699,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ",
          "cells": [
            {
              "type": "test",
              "title": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fd44f8d4-c648-48c4-872b-9bc4b6997603",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 272702,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 268,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9",
          "cells": [
            {
              "type": "test",
              "title": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f5fb4f61-02ca-4cfc-88a0-75342e49a5c5",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 272968,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
          "cells": [
            {
              "type": "test",
              "title": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2b961d50-0188-494c-911b-0895384c4ee4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:cc999b2f-2115-4686-82e7-21b32906a68f",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1387a40f-acc7-4afb-a890-150d438dbee7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273192,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9d7a8453-4cc7-4c79-a5bc-ea50f0925668",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273261,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b9189aa8-b675-4d9c-a2bb-7626e06625bb",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273331,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:97f8eddb-9aee-4eef-9dcd-f7e37e1c6e1e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273401,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y",
          "cells": [
            {
              "type": "test",
              "title": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e34351d8-e5c3-476c-9c37-f39718e7284f",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273469,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169",
          "cells": [
            {
              "type": "test",
              "title": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:db5fe8aa-a7b2-4d95-bbdd-b5d5fbda22e8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme",
          "cells": [
            {
              "type": "test",
              "title": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:aca4a082-f602-4cf7-ac05-9d4b2126bcb3",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273614,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt",
          "cells": [
            {
              "type": "test",
              "title": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6cc5150a-93d2-46f1-8a92-0d0d48c8aee2",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273682,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc",
          "cells": [
            {
              "type": "test",
              "title": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ebe05f8e-3163-441e-ab76-a1e982de952d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273751,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy",
          "cells": [
            {
              "type": "test",
              "title": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b534b2ca-a892-4ffc-8307-9ddc8674a39e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273820,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi",
          "cells": [
            {
              "type": "test",
              "title": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:799a0610-a51b-418e-a783-2ae953b674be",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd",
          "cells": [
            {
              "type": "test",
              "title": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:4926cc18-699d-4615-922a-0fb5462b1fc0",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 273955,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 510,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ",
          "cells": [
            {
              "type": "test",
              "title": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f8a5cbfa-64bf-4dae-a421-a1f217f8f011",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 274466,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 528,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:lit:AEZ87t1bi5bRxmVh3ksMUi",
          "cells": [
            {
              "type": "test",
              "title": "did:lit:AEZ87t1bi5bRxmVh3ksMUi",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2a5a5987-5abc-400d-9653-12f04f421f38",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:lit:AEZ87t1bi5bRxmVh3ksMUi"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 274994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5081,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65",
          "cells": [
            {
              "type": "test",
              "title": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d9a1dad2-0afe-4940-ba47-e89bf7595a77",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 590,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA",
          "cells": [
            {
              "type": "test",
              "title": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b913da24-8738-43f9-a491-1474039db82c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM",
          "cells": [
            {
              "type": "test",
              "title": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:2548e4b6-65f4-4ecd-81ff-3f74248b2f93",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 280755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3566,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL",
          "cells": [
            {
              "type": "test",
              "title": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a47c8c22-dde7-4d08-b0fc-c04e7f539d86",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 284322,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 3255,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR",
          "cells": [
            {
              "type": "test",
              "title": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9d9a0490-15f8-4d5a-a580-57a1c851356c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 287577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 513,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH",
          "cells": [
            {
              "type": "test",
              "title": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7db145a0-ff56-444e-acc9-b378e7586363",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 288091,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 655,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA",
          "cells": [
            {
              "type": "test",
              "title": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a5c220e6-871b-4c11-8798-cce0ed67b3f6",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 288747,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net",
          "cells": [
            {
              "type": "test",
              "title": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9dd50fb6-729a-4cbb-8fd1-272555f442a2",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 303749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1192,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh",
          "cells": [
            {
              "type": "test",
              "title": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ef41643e-965e-48b5-a43a-cb25b55aa8ec",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 304941,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1011,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc",
          "cells": [
            {
              "type": "test",
              "title": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:8c24eb12-1fb2-458d-b2cf-b3f8578e4963",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 305951,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ",
          "cells": [
            {
              "type": "test",
              "title": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:04690f69-9e67-4793-a830-23a42484bf76",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ",
          "cells": [
            {
              "type": "test",
              "title": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b112b37e-a076-42e8-959d-a2d145fdab8d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 67,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq",
          "cells": [
            {
              "type": "test",
              "title": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:39db91f8-d6ef-4568-979a-47a819414a5e",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306408,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:plc:44ybard66vv44zksje25o7dz",
          "cells": [
            {
              "type": "test",
              "title": "did:plc:44ybard66vv44zksje25o7dz",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c2e495fc-6d0e-414d-8ca8-533d394c0d97",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:plc:44ybard66vv44zksje25o7dz"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306477,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:plc:yk4dd2qkboz2yv6tpubpc6co",
          "cells": [
            {
              "type": "test",
              "title": "did:plc:yk4dd2qkboz2yv6tpubpc6co",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:1649a0c5-c3a6-4540-a32b-22f2006abdc5",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:plc:yk4dd2qkboz2yv6tpubpc6co"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306557,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            }
          ]
        },
        {
          "id": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68",
          "cells": [
            {
              "type": "test",
              "title": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:86e266fc-dd31-49dc-a373-2794e8171e18",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 306630,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 451,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625",
          "cells": [
            {
              "type": "test",
              "title": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:ff4a1a01-eed2-4607-b42f-98cc230afbd7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4",
          "cells": [
            {
              "type": "test",
              "title": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:59493541-e0ef-4289-b394-1b14eac3778c",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307494,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 410,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ",
          "cells": [
            {
              "type": "test",
              "title": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:d8f69b77-9199-4cc6-8991-da53353882a8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307905,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
          "cells": [
            {
              "type": "test",
              "title": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:bcd095ed-a75c-4c0e-99bf-032c8e3c612d",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 307976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 136,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
          "cells": [
            {
              "type": "test",
              "title": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f0b214a-69f1-4a61-9801-04be93f02bc8",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308113,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 144,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK",
          "cells": [
            {
              "type": "test",
              "title": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:50bb1c79-a5b1-4cc5-92fb-1c2bff09cb26",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308257,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 690,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:sov:WRfXPg8dantKVubE3HX8pw",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:WRfXPg8dantKVubE3HX8pw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:4a43aba4-6bdb-4ad3-b459-34c6781ce964",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:WRfXPg8dantKVubE3HX8pw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 308947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 334,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:fd8863df-cf96-41c5-bfd4-5bc42ba4841a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 309282,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:cf45d0b8-4caa-4d76-b2f0-f98e9d13391a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 324285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15003,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a944a70e-65b7-45c3-89ea-45f784451008",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 339287,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:6f223860-d796-41f6-aefd-e0f98661c2fa",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 354289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB",
          "cells": [
            {
              "type": "test",
              "title": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:7a49e986-5402-4c77-9aca-f4c13372e426",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 369292,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15002,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0",
          "cells": [
            {
              "type": "test",
              "title": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:9c040789-022e-4700-8ebf-801e2ceda052",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 384294,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF",
          "cells": [
            {
              "type": "test",
              "title": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:28d5ecdd-143d-48ac-831b-e988e21a7c9a",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 399296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 281,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC",
          "cells": [
            {
              "type": "test",
              "title": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:0037ae48-f373-4f96-b988-a45e56d77d59",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 399577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15000,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x",
          "cells": [
            {
              "type": "test",
              "title": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:683eeece-e4a3-46f7-8343-c9a271c5b295",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 414579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 645,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4",
          "cells": [
            {
              "type": "test",
              "title": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:f3260eda-2760-40f7-aff3-0f6c7c0140f4",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415223,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 465,
              "state": "failed",
              "err": {
                "actual": "false",
                "expected": "true",
                "showDiff": true,
                "operator": "strictEqual",
                "name": "AssertionError",
                "message": "expected false to be true",
                "ok": false,
                "stack": "AssertionError: expected false to be true\n    at Context.<anonymous> (file:///home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js:32:27)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR",
          "cells": [
            {
              "type": "test",
              "title": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c56dac09-d63c-4a28-a099-edb5c101dafd",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 245,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t",
          "cells": [
            {
              "type": "test",
              "title": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:b7c127fd-1ada-482f-a255-4035ed3fdc46",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 415935,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 203,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud",
          "cells": [
            {
              "type": "test",
              "title": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:5634af54-3860-4e80-849e-2f83f7b70503",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 416137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 200,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC",
          "cells": [
            {
              "type": "test",
              "title": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e5f5b8e3-6520-4b95-a7b2-9ff6bbbeafa7",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 416337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        },
        {
          "id": "did:web:danubetech.com",
          "cells": [
            {
              "type": "test",
              "title": "did:web:danubetech.com",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e2b6c759-b575-42f5-b6af-61588e704a91",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:web:danubetech.com"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 431340,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 741,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:web:identity.foundation",
          "cells": [
            {
              "type": "test",
              "title": "did:web:identity.foundation",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e22c04b5-9f72-4be9-b621-b79c89d4c3a1",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:web:identity.foundation"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432079,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 497,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
          "cells": [
            {
              "type": "test",
              "title": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:e8c90b77-aee7-469d-9668-cec7f4f31e5b",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432576,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 113,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw",
          "cells": [
            {
              "type": "test",
              "title": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:a5a48f5b-dcd6-4886-a5ba-831cc7ea8303",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 285,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io",
          "cells": [
            {
              "type": "test",
              "title": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:c8ad85cd-8b83-4a01-8320-44fcb1d363cf",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 432976,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 141,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351",
          "cells": [
            {
              "type": "test",
              "title": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351",
              "body": "async function() {\n          const endpoint = implementation.settings.didResolvers[0].endpoint;\n          const url = `${endpoint}/${did}`;\n          const rv = await fetch(url);\n          // TODO: should we test if failures are handled correctly here also?\n          rv.ok.should.be.true;\n          rv.status.should.equal(200);\n          rv.headers.get('content-type')\n            .should.include('application/did-resolution');\n          const doc = await rv.json();\n          doc.should.have.property('didResolutionMetadata');\n          doc.should.have.property('didDocument');\n          doc.didDocument.id.should.equal(did);\n          doc.should.have.property('didDocumentMetadata');\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": true,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js",
              "parent": "lxGEEvvXl_AraVb3cwUy3",
              "ctx": null,
              "_testId": "urn:uuid:36f60f11-c01c-4ada-870f-0a1f5424d829",
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351"
              },
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 433119,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 15001,
              "state": "failed",
              "err": {
                "code": "ERR_MOCHA_TIMEOUT",
                "timeout": 15000,
                "file": "/home/runner/work/did-resolution-mocha-test-suite/did-resolution-mocha-test-suite/tests/10-test-example.js"
              }
            }
          ]
        }
      ]
    },
    {
      "title": "At Risk",
      "rowLabel": "Statement",
      "columnLabel": "Reason",
      "columns": [
        "At least 2 passing implementations"
      ],
      "rows": [
        {
          "id": "did:ala:quor:redT:3729a1872356dd5c5ac377c85d539fe63cb561d8",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ala:quor:redT:706b3e4611a855b8b1267c4e9f0c77124af003fe",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ala:quor:redT:ec27f358fd0d11d8934ceb51305622ae79b6ad15",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:algo:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:algo:mainnet:app:1845671812:da490f2d15a625459bf970a3d55e1a646dfd3a956d011546e953e945d39fdada",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:bba:47ef0798566073ea302b8178943aaa83f227614d6f36a4d2bcd92993bbed6044",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:bba:t:45e6df15dc0a7d91dcccd24fda3b52c3983a214fb0eed0938321c11ec99403cf",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:bid:ef214PmkhKndUcArDQPgD5J4fFVwqJFPt",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:btc1:k1qypcylxwhf8sykn2dztm6z8lxm43kwkyzf07qmp9jafv3zfntmpwtks9hmnrw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:btcr:x705-jznz-q3nl-srs",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:btcr:xkrn-xz7q-qsye-28p",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:btcr:xz35-jznz-q9yu-ply",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ccp:3CzQLF3qfFVQ1CjGVzVRZaFXrjAd",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ccp:ceNobbK6Me9F5zwyE3MKY88QZLw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:cheqd:mainnet:Ps1ysXP2Ae6GBfxNhNQNKN",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:cheqd:testnet:55dbc8bf-fba3-4117-855c-1e0dc1d3bb47",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:cndid:sf24eYrmwXt6nx4fig3XJm7n9UP6PNRJ3",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:com:17rhmdzlv0zjuahw4mvpfhf3u5tuwyjhr4m06dr",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:com:1l6zglh8pvcrjtahsvds2qmfpn0hv83vn8f9cf3",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:content:3SqTXtoMpiPeNo5vEP2p7yNGQUeCGjqW1wnctv8yaCWXojD29GYcUEo",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dns:danubetech.com",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dock:5CDsD8HZa6TeSfgmMcxAkbSXYWeob4jFQmtU6sxr4XWTZzUA",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dock:5CxUdCGtopZEJhdv6kfLBZ22PMZX7UK8mdcHbTVw2nw6MVZH",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dyne:demo:2r1FxbRA1EyfgeXh9TgEYT5RfkbMFUwLEmbYqeBajNbp",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dyne:demo:FFqGYxShyDGAHd4QyLY1KFCSGBb1mBP9sZebEyBM7JPi",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dyne:demo_A:DBzNYB3ft2ncfeGaVV8aR5x95tU5hKUqGLYpDJifEVwu",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:dyne:sandbox.test:JBdcDrTMkEuR8A2QnMQLRDXBL82AKxTpuHkxhmzgdkVH",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ebsi:z24q53pA3pjcnoukP6fD5jXt",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ebsi:zjUnExsyyweQ9p4cy3nvrVc",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:elem:ropsten:EiCtwD11AV9e1oISQRHnMJsBC3OBdYDmx8xeKeASrKaw6A",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:emtrust:0x242a5ac36676462bd58a",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ens:vitalik.eth",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:eosio:4667b205c6838ef70ff7988f6e8257e8be0e1284a2f59699054a018f743b1d11:caleosblocks",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:eosio:eos:eoscanadacom",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ethr:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ethr:0x1:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ethr:0x1:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ethr:0x3b0BC51Ab9De1e5B7B6E34E5b960285805C41736",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ethr:sepolia:0x03fdd57adec3d438ea237fe46b33ee1e016eda6b585c3e27ea66686c2ea5358479",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ev:bmM8MpeJAGF2ky7YUnwgJGKxyHdCL6DGAUmEW",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ev:bmM8apgHQD8cPbwNsMSJKqkYRCDYhkK55uxR9",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:evan:0x7df25c5090b5361562ef30b3c30ddcde0ac59dd4",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:everscale:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:everscale:mainnet:47325e80e3cef5922d3a3583ae5c405ded7bda781cb069f2bc932a6c3d6ec62e",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:everscale:testnet:d760f69f830dfa0668f2e7923392217589ec8d62dcb90f2c06656665dba7fb4d",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:evrc:issuer:polygon:62eeb90e-eee4-4d31-8927-1075e82b2a74",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:factom:testnet:6aa7d4afe4932885b5b6e93accb5f4f6c14bd1827733e05e3324ae392c0b2764",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:factom:testnet:c2d5aa15943c93db313f140e7ed87ec9891d02acbde748932db583aa3080af08",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:gatc:25sPfKCaYnzV6f8ckJeqyqNcpsbeBPBS",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:gatc:2xtSori9UQZdTqzxrkp7zqKM4Kj5B4C7",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:gatc:32MxGGj4gpCEWMiKjPtCqsrbg9JF9Kn4",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:gatc:acYseLtTEVeqF8oBhJEejbCVHJ8auVupaRuo6gw4hmXjcc77uCKqyM3imEJH",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:github:gjgd",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:hcr:0f674e7e-4b49-4898-85f6-96176c1e30de",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:icon:01:64aa0a2a479cb47afbf2d18d6f9f216bcdcbecdda27ccba3",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:iden3:polygon:amoy:xC8VZLUUfo5p9DWUawReh7QSstmYN6zR7qsQhQCsw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:iid:3QUs61mk7a9CdCpckriQbA5emw8pubj6RMtHXP6gD66YbcungS6w2sa",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:idunion:2GMSLg2A8JXcdYVsPC4Jui",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:nxd:LLDnZr8iaYM3F77pUWXnVX",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:sovrin:WRfXPg8dantKVubE3HX8pw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:sovrin:builder:VbPQNHsvoLZdaNU7fTBeFx",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:indy:sovrin:test:6cgbu8ZPoWTnR5Rv5JcSMB",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:io:0x476c81C27036D05cB5ebfe30ae58C23351a61C4A",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ion:EiClkZMDxPKqC9c-umQfTkR8vvZ9JPhl_xLDI9Nfk38w5w",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:iota:0xf4d6f08f5a1b80dd578da7dc1b49c886d580acd4cf7d48119dfeb82b538ad88a",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:iscc:miagwptv4j2z57ci",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:itn:EzfteTXcoHXh5W1PURHrS3",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:itn:PA7xLNkMAqzzrDp4UBnrZm",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:jolo:e76fb4b4900e43891f613066b9afca366c6d22f7d87fc9f78a91515be24dfb21",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1NjpGZk1iek9qTW1RNGVmVDZrdndUSUpqZWxUcWpsMHhqRUlXUTJxb2JzUk1NIiwia3R5IjoiT0tQIiwiY3J2IjoiRWQyNTUxOSIsImFsZyI6IkVkRFNBIiwieCI6IkFOUmpIX3p4Y0tCeHNqUlBVdHpSYnA3RlNWTEtKWFE5QVBYOU1QMWo3azQifQ",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:jwk:eyJraWQiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLTI1Njpnc0w0VTRxX1J6VFhRckpwQUNnZGkwb1lCdUV1QjNZNWZFanhDd1NPUFlBIiwia3R5IjoiRUMiLCJjcnYiOiJQLTM4NCIsImFsZyI6IkVTMzg0IiwieCI6ImEtRWV5T2hlRUNWcDJqRkdVRTNqR0RCNlAzVV80S0lyZHRzTU9RQXFQN0NBMlVvV3NERG1nOWdJUVhiOEthd0ciLCJ5Ijoib3cxWDJ6VFVRaG12elY4NnpHdGhKc0xLeDE2MmhmSmxmN1p0OTFYUnZBTzRScE4zR2RGaVl3Tmc0NXJWUmlUcSJ9",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:keri:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z2J9gcGbsEDUmANXS8iJTVefK5t4eCx9x5k8jr8EyXWekTiEet6Jt6gwup2aWawzhHyMadvVMFcQ3ruwqg1Y8rYzjto1ccQu",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z3tEFS9q2WkwvvVvr1BrYwNreqcudmcCQGGRSQ8r73recEqAUHGeLPWzwK6toBdKJgX3Fs",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z4MXj1wBzi9jUstyPMS4jQqB6KdJaiatPkAtVtGc6bQEQEEsKTic4G7Rou3iBf9vPmT5dbkm9qsZsuVNjq8HCuW1w24nhBFGkRE4cd2Uf2tfrB3N7h4mnyPp1BF3ZttHTYv3DLUPi1zMdkULiow3M1GfXkoC6DoxDUm1jmN6GBj22SjVsr6dxezRVQc7aj9TxE7JLbMH1wh5X3kA58H3DFW8rnYMakFGbca5CB2Jf6CnGQZmL7o5uJAdTwXfy2iiiyPxXEGerMhHwhjTA1mKYobyk2CpeEcmvynADfNZ5MBvcCS7m3XkFCMNUYBS9NQ3fze6vMSUPsNa6GVYmKx2x6JrdEjCk3qRMMmyjnjCMfR4pXbRMZa3i",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z5TcEoNqw2THWrFNZP62f2UmKMsuDnxmtYiNFHbVvqyPKUVyt7XfYmJ6HUsxmMYh2QWRctQ65HEw6BcPXxQevdAAWsd2aTNSjVUZ6VoyuPv8g8BySddJG9bDLGzey9EHSdYMcHYrYV8ycwKeNxcSrLqTCqxzDBHmyW6zEzDyYUoa8S8SAzAhVXF2uT19iyczDekWKZoPw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:z82Lkytz3HqpWiBmt2853ZgNgNG8qVoUJnyoMvGw6ZEBktGcwUVdKpUNJHct1wvp9pXjr7Y",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:zDnaerDaTF5BXEavCrfRZEk316dpbLsfPDZ3WJ5hRTPFU2169",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:zQ3shokFTS3brHcDQrn82RUDfCZESWL1ZdCEJwekUDPQiYBme",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:key:zUC7DWA2FazpvPXmiXeTWuLjdMGXXmmWXbwoKNo554L3E4PD5ZsoZPqzCvkFkkQGvWp6uLZ3PKQJMfXYzLGNoiMyqXYSQa19cvWTiH3QpzddfRVWW6FtFMWTcvUb7wg4o9khbDt",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:kilt:4rNTX3ihuxyWkB7wG3oLgUWSBLa2gva1NBKJsBFm7jJZUYfc",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:kilt:light:004pqDzaWi3w7TzYzGnQDyrasK6UnyNnW6JQvWRrq6r8HzNNGy:z15dZSRuzEPTFnBErPxqJie4CmmQH1gYKSQYxmwW5Qhgz5Sr7EYJA3J65KoC5YbgF3NGoBsTY2v6zwj1uDnZzgXzLy8R72Fhjmp8ujY81y2AJc8uQ6s2pVbAMZ6bnvaZ3GVe8bMjY5MiKFySS27qRi",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:kscirc:k2f2PhnVHabRenKbaKfLMyuxRU94S1HfAwsR2dMHxTqVeEzmPxsd",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:kscirc:k7745fAnbFGBeECS7xTDkowVXZZxEvMhpfbcQjaLYSiyed5du9MJ",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:lit:AEZ87t1bi5bRxmVh3ksMUi",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:meta:0000000000000000000000000000000000000000000000000000000000005e65",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:moncon:z6MkfrVYbLejh9Hv7Qmx4B2P681wBfPFkcHkbUCkgk1Q8LoA",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:mydata:z6MkjgVfx2YE7SUBZBej65E7UHSjAyMLukPvdPjPytpTy1ZM",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:mydata:z6MktaWPDXK7qwt9YgcGVuCFAXBvrEP3WPtxJQg37jnULXWL",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:near:CF5RiJYh4EVmEt8UADTjoP3XaZo1NPWxv6w5TmkLqjpR",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:ont:AN5g6gz9EoQ3sCNu7514GEghZurrktCMiH",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:orb:hl:uEiBuxTFn4L_Hn8KsOWo8e9kqWP38MThBaToB_5yV3c5QTg:uoQ-BeEJpcGZzOi8vYmFma3JlaWRveXV5d3B5Zjd5NnA0Zmxiem5pNmh4d2prbGQ2N3ltanlpZnV0dWFwN3RzazUzdHNxank:EiD_igS1OSEftg5BGfisJGOS1rgcx5AkQhX0h1B4dHTUYA",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:oyd:zQmNauTUUdkpi5TcrTZ2524SKM8dJAzuuw4xfW13iHrtY1W%40did2.data-container.net",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:oyd:zQmaBZTghndXTgxNwfbdpVLWdFf6faYE4oeuN2zzXdQt1kh",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:pdc:8801:0xf47b66bc0d9b7c73f9ff27bf1f49a2b69dc167fc",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:peer:2.Ez6LSghwSE437wnDE1pt3X6hVDUQzSjsHzinpX3XFvMjRAm7y.Vz6Mkhh1e5CEYYq6JBUcTZ6Cp2ranCWRrv7Yax3Le4N59R6dd.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9hbGljZS5kaWQuZm1ncC5hcHAvIiwiciI6W10sImEiOlsiZGlkY29tbS92MiJdfQ",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:peer:2.Ez6LSpSrLxbAhg2SHwKk7kwpsH7DM7QjFS5iK6qP87eViohud.Vz6MkqRYqQiSgvZQdnBytw86Qbs2ZWUkGv22od935YF4s8M7V.SeyJ0IjoiZG0iLCJzIjoiaHR0cHM6Ly9leGFtcGxlLmNvbS9lbmRwb2ludDEiLCJyIjpbImRpZDpleGFtcGxlOnNvbWVtZWRpYXRvciNzb21la2V5MSJdLCJhIjpbImRpZGNvbW0vdjIiLCJkaWRjb21tL2FpcDI7ZW52PXJmYzU4NyJdfQ",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:pkh:tz:tz2BFTyPeYRzxd5aiBchbXN3WCZhx7BqbMBq",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:plc:44ybard66vv44zksje25o7dz",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:plc:yk4dd2qkboz2yv6tpubpc6co",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:prism:0d8481c41b654794f02922601f84811763c655dcfc376acf841eb996846d5e68",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:prism:52e163e8e53466b808e53df870bccd0a066aa4d05af9b689f5c73edcbe23d625",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:prism:c36cd59bbc62dee1925e1343a8fed051416e417116d6169d060746f1e6816cd4",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:quarkid:EiA9SoiWkqduxPJcVk3UVoUGWm3WL2S6mox3qH3AWVCwMQ",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:schema:evan-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:schema:public-ipfs:json-schema:Qma2beXKwZeiUXcaRaQKwbBV1TqyiJnsMTYExUTdQue43J",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sol:devnet:2eK2DKs6vdzTEoj842Gfcs6DdtffPpw1iF6JbzQL4TuK",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:WRfXPg8dantKVubE3HX8pw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:idunion:2GMSLg2A8JXcdYVsPC4Jui",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:idunion:test:BDrEcHc8Tb4Lb2VyQZWEDE",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:indicio:demo:KKyAeG7woJMV6MhhAREVKp",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:sov:test:6cgbu8ZPoWTnR5Rv5JcSMB",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:tgrid:trustgrid:dev:QjA1qdXKmxzgK4u8mFoBpF",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:tys:4B4AbVzzcJSnCZsdX4VaKyQgHRnC",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:tz:tz1YwA1FwpgLtc1G8DKbbZ6e6PTb1dQMRn5x",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:unisot:test:n1aAmTXAg4o44Z9k8YCQncEY91r3TV7WU4",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:v1:nym:z6Mkmpe2DyE4NsDiAb58d75hpi1BjqbH6wYMschUkjWDEEuR",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:v1:test:nym:z6MkgF4uJbLMoUin2uKaBf4Jb1F7SHzuALE8Ldq8FPPpHE9t",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:v1:test:nym:z6MkmWLiAt5FtfwgFJwMDGS1GiFn1KpUXsd7bn1v2hLyXvud",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:vaa:3wJVWDQWtDFx27FqvSqyo5xsTsxC",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:web:danubetech.com",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:web:identity.foundation",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:webs:peacekeeper.github.io:did-webs-iiw37-tutorial:EKYGGh-FtAphGmSZbsuBs_t4qpsjYJ2ZqvMKluq9OxmP",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:webvh:QmPEQVM1JPTyrvEgBcDXwjK4TeyLGSX1PxjgyeAisdWM1p:gist.githubusercontent.com:brianorwhatever:9c4633d18eb644f7a47f93a802691626:raw",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:webvh:QmVJ5nUYb9iugnUz4yDfbe8UFbhmnsvS2EAzSpSfPScRAn:opsecid.github.io",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "did:zkjm:mainnet:d90e52b36a2e2306dc873ec0f7a94351",
          "cells": [
            {
              "state": "failed"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "did-resolution-mocha-test-suite",
    "subtitle": "Interoperability Report for DID Resolution Test Suite",
    "github": "https://github.com/w3c-ccg/did-resolution-mocha-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/did-resolution-mocha-test-suite/",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [],
    "authors": []
  },
  "title": "DID Resolution Test Suite",
  "stats": [],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}